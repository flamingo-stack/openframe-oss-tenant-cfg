server:
  port: 8100

# Gateway service common configuration
spring:
  main:
    web-application-type: reactive
  redis:
    enabled: true
    timeout: 2000
    connect-timeout: 2000
    lettuce:
      shutdown-timeout: 2000ms
      pool:
        enabled: true
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: 1000ms
    client-type: lettuce
  data:
    cassandra:
      enabled: true
    mongodb:
      enabled: true
  cloud:
    config:
      fail-fast: false
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true
        websocket:
          max-frame-payload-length: 1048576 #1MB
      routes:
        - id: sas
          uri: https://localhost:9005
          predicates:
            - Path=/sas/**
          order: 0

        # Direct Swagger/OpenAPI routes (for Swagger UI JavaScript requests)
        - id: swagger-api-docs
          uri: http://openframe-external-api.microservices.svc.cluster.local:8092
          predicates:
            - Path=/api-docs/**
          order: 0

        - id: swagger-ui-direct
          uri: http://openframe-external-api.microservices.svc.cluster.local:8092
          predicates:
            - Path=/swagger-ui/**
          order: 0

        - id: swagger-webjars
          uri: http://openframe-external-api.microservices.svc.cluster.local:8092
          predicates:
            - Path=/webjars/**
          order: 0

        - id: openframe-external-api
          uri: http://openframe-external-api.microservices.svc.cluster.local:8092
          predicates:
            - Path=/external-api/**
          filters:
            - StripPrefix=1

        - id: openframe-api
          uri: http://openframe-api.microservices.svc.cluster.local:8090
          predicates:
            - Path=/api/**
          filters:
            - StripPrefix=1

        - id: openframe-client
          uri: http://openframe-client.microservices.svc.cluster.local:8097
          predicates:
            - Path=/clients/**
          filters:
            - StripPrefix=1

        - id: openframe-ui-spa
          uri: http://openframe-ui.microservices.svc.cluster.local:3000
          predicates:
            - Path=/**

# Rate limiting configuration
openframe:
  rate-limit:
    enabled: true
    default-requests-per-minute: 5
    default-requests-per-hour: 1000
    default-requests-per-day: 10000
    redis-ttl: 7200        # 2 hours in seconds
    fail-open: true
    log-violations: true
    include-headers: true

# OpenFrame Gateway OAuth2 Configuration
  auth:
    server:
      url: https://localhost:9005/sas
      authorize-url: https://localhost/sas
  security:
    cookie:
      domain: null
      secure: true   # true for HTTPS, false for HTTP
    jwt:
      cache:
        expire-after: PT30M
        refresh-after: PT10M
        maximum-size: 2000
  gateway:
    oauth:
      client-id: openframe-gateway
      client-secret: openframe-gateway-secret
      redirect-uri: https://localhost/oauth/callback
      enable: true
  # API Key Statistics configuration
  api-key-stats:
    redis-ttl: 604800      # 7 days in seconds

security:
  oauth2:
    token:
      access:
        expiration-seconds: 900
      refresh:
        expiration-seconds: 604800

management:
  server:
    port: 8101

jwt:
  issuer: https://auth.openframe.com
  audience: openframe-web
  privateKey:
    value: |
      -----BEGIN PRIVATE KEY-----
      MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDaE661eZM6ESns
      UcJdGmfquTJ5BFK0dw17kYX/7p96N8/s3iUgB7fdgbKuUsHz76nb9FxZh3pkE1vu
      Zhf9dohxGmyCtofEyOxDwvKKjxCS4NfscXNblbgwUYxIFi/zMr3kU08YYrYsR1F/
      4O1pjORemquQlOB/DuMWoRUKIL0SDqvIc7RSmkONvyGjZdkilaABxbhB/6JdpFYJ
      H4U3i1H0sX+8GaofXcJAP2NrOpJNHmYyn2KH2wbRKoQBjECEQ1e0uN/7Ifa4OmW7
      RFoWS695zxCDlqCWsPNMrjCkXVq8lcKad0O3ZVt8wwJ6GIsjfUs+byo2gmjzsoXv
      WC8T6RZxAgMBAAECggEAGsiuaAaJtmjeQR1HkGofrOdYaMmcTiLjH96fL8Wt255t
      kKuLXBQ77l4xb7ylVUxbDIibgQ7P0ZPDx5N4IH7Fl5KbFNt4mwrhuG7XSCegbacP
      jgWJxAwERmxK8khF/7TR4sWioh2ZlKBLxQzUoTvsiSauVKscVC6kEHxHRRUBSRgU
      bW+yj6ZzMzA7Eh12JnnYSJDt5IFvNC3Isx/L/xlEsSId4AE5YQDWZeM+9C0pD9Xi
      aVaF4CZZQo7S3yJzHOBw3GbMJzw04ZuVvpQndgTd8AKOPD4wJQWT08LMq+s1hXT8
      GIJ5mGrQnw9S7AZDN9dPOL0XjR//4VjACOv64nLCywKBgQD3M9dVI4bc6Y5QKc4+
      iefeh13GPK9DOS+EjGNlyOuwmamdIn2TXxBq3kQn2hfRt8aP6pJUJllc/paOQKwo
      Kj9BXeE3MRgP0F/e+M+F8BCR5tVlFz/Tsh6O1KEBFHnqeVebBhiq94Ohd66LLJ9k
      88bdAlbXKtPledT8I4YnyMD5fwKBgQDh1n1tE6ODFgw+0uiuXWqbr8Rsdwlcgncy
      aMBJC99mVbWqNOyMJSRhV0u4Fubo5qtEtHw/prYZ78Arpx/rQMWlvCfxXbo9Dzkx
      Jwk/pKYYxS8q6weReFLHEBbMV0OmLpXm0gaRqRoZVNeXvMs5QVTaMDuIjMOa6QdY
      AuUR1XGIDwKBgB3164hHGQZXTEdM+dE8l5yx3Vy0aC2GlcrD1Rw2ANLTnOoNjxi4
      cd3x+GK4HSDu3CL/NCL8zuHlfUvabMMlc6sxfKVazubDw4rbrxM1qFx2lLB+4959
      fRSkkqr111zivgps77pw60Q7pCz8CImMvjJ1IR9M8oeif3zbtVvHChRzAoGBAIix
      vzFqlaoeikLsfhIsUP7zIL1WP8BS57sHVHviR9I1RsRDTHp3cNHKePZwRkvqcvgf
      FqWgTtDcIUFK4zMN/ZQXk0WxKa0TrdZmfl6bVj3f/HDJ2cbfQZtjzajZmQTZZbpU
      nc1EwZtbkzMw/wEk3itCzoYUTcFSEzPebLCitRlZAoGBAMiJvEEuXOnRR/8M2znW
      RW8sW+h2Y7z4VyCUe0uWcwQ8m9SSIvxGrQScBAgSFIvucH2O2ViXXPL9ysiKvDab
      M1L84p9zp0LUoEKCkInzRxey0rPLjRSiYRoqiJpSXisX4uUZ8H/paG17p9vNRYM8
      WCF8tQL1/DdeHALwemnWrgyc
      -----END PRIVATE KEY-----
  publicKey:
    value: |
      -----BEGIN PUBLIC KEY-----
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2hOutXmTOhEp7FHCXRpn
      6rkyeQRStHcNe5GF/+6fejfP7N4lIAe33YGyrlLB8++p2/RcWYd6ZBNb7mYX/XaI
      cRpsgraHxMjsQ8Lyio8QkuDX7HFzW5W4MFGMSBYv8zK95FNPGGK2LEdRf+DtaYzk
      XpqrkJTgfw7jFqEVCiC9Eg6ryHO0UppDjb8ho2XZIpWgAcW4Qf+iXaRWCR+FN4tR
      9LF/vBmqH13CQD9jazqSTR5mMp9ih9sG0SqEAYxAhENXtLjf+yH2uDplu0RaFkuv
      ec8Qg5aglrDzTK4wpF1avJXCmndDt2VbfMMCehiLI31LPm8qNoJo87KF71gvE+kW
      cQIDAQAB
      -----END PUBLIC KEY-----